# Example YAML to get you started quickly.
# Be aware that YAML has indentation based scoping.
# Code completion support is available so start typing for available options.
swagger: '2.0'

# This is your document metadata
info:
  version: "0.0.0"
  title: APL LMS API
  description: |
    ### Entities and API definitions
    #### UNID
    UNID stands for _Unique Node Identifier_ — a unique string to find, fetch, associate with and identify by nodes. UNID is also a URI of its respective node. 
    #### Locale
    The _lingual locale_ that is used to recognize the language of learning materials. 
    #### Node
    The `Node` class represents learning node — a single indivisible waypoint in IMARD learning process. Somethig is a `Node` if it is a minimal specific achievable skill or a descrete obtainable knowledge.
    Each node can have the following qualities:
    * `id` — _Unique Node Itentifier_;
    * `locale` — _lingual locale_;
    * `title` — brief description of the skill or knowledge that is obtainable upon examining the node;
    * `description` — more thorough description of subjects and activities involved in node's materials;
    * `resolutionStatus` — tells whether are there materials accessible via IMARD node behind the described name and description. Each node can be in one of two options:
      * `resolved` — there are actual learning materials behind given `name` and `description`. The resolved status guarantees that one can access a working learning module via `UNID` and it would answer to the given properties;
      * `unresolved` — there are no available materials to answer given `name` and `description` within IMARD system yet.
    
    Nodes can relate to each other via the following verbs:
    
    * `dependsOn` — under this verb would be a list of nodes, knowledge and skills described in which are required for mastering ones represented by this current node. Each dependable node is represented with its `UNID`. This verb enables hierarchical structuring of the learning materials;
    * `localizes` — under thes verd would be a list of nodes, knowledge and skills described in which are same or very similar to ones represented by this current node, however written in different languages. This verb enables dynamic multilingual learning.
    
    The main body of `Node` is a webpage that is accessible via `UNID`. The page may contain learning materials and media along with the glossary.
    #### Hierarchy
    `Hierarchy` is a tree of several interconnected instances of `Node` class described in [JSON Graph Forman (JGF)](http://jsongraphformat.info). Although a `Hierarchy` should be valid against the [JGF v3.0 Schema](http://jsongraphformat.info/child-schemas/bel-json-graph-3.0.schema.json) we provide an adjusted version of the same schema definitions here. Things to note in this:
     - Both `"dependsOn"` and `"localizes"` verbs are supported as `"relation"` options so we could support multilingual learning experience.

parameters:
  node-title:
    name: node-title
    description: Title of a learning node
    type: string
    in: path
    required: true

# Describe your paths here
paths:
  # This is a path endpoint. Change it.
  '/node/{node-title}/meta':
    parameters:
      - $ref: '#/parameters/node-title'
    # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        Gets a single `Node` object that has a specified title.
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          schema:
            type: object
            properties:
              node:
                $ref: "#/definitions/node"
        404:
          description: Node not found
          schema:
            $ref: "#/definitions/Error"
                
  '/node/{node-title}/tree':
    parameters:
      - $ref: "#/parameters/node-title"
    get:
      description: |
        Gets a complete tree of `Node` objects with a root in a given node.
      responses:
        200:
          description: Successeful response
          schema:
            $ref: "#/definitions/hierarchy"
        404:
          description: Root node not found
          schema:
            $ref: "#/definitions/Error"
                  
definitions:
  UNID:
    title: Unique identificator
    description: URI of a IMARD learnin node
    type: string
    
    
  locale:
    title: Locale
    description: Describes to l10n of the learning node
    type: string
    enum:
      - RU-ru
      - EN-en
  
  node:
    title: IMARD learning node
    description: A single indivisible waypoint in IMARD learning process
    type: object
    properties:
      id:
        "$ref": "#/definitions/UNID"
      locale:
        "$ref": "#/definitions/locale"
      title:
        type: string
        description: Briefly describes skill or knowledge obtainable by a student upon
          examining the node
      description:
        type: string
        description: More thorough description of subjects and activities involved in
          node's materials
      resolutionStatus:
        type: string
        description: Tells the system whether are there materials accessible via IMARD
          node behind the described name and description
        enum:
        - resolved
        - unresolved
      dependsOn:
        type: array
        items:
          "$ref": "#/definitions/UNID"
        maxItems: 4
      localizes:
        type: array
        items:
          "$ref": "#/definitions/UNID"
    required:
      - title
      - description
      - resolutionStatus
      - locale
  node-relation:
    type: string
    description: Relation between two nodes in an APL tree
    enum:
      - dependsOn
      - localizes
  
  graph: 
    title: Graph representation of an APL learning tree
    type: object
    properties:
      label:
        type: string
        title: Graph label
      directed:
        type: boolean
        description: | 
          Thells whether the graph is directed or not. APL trees are always directed.
        default: true
      type:
        type: string
        description: Type of a graph used
        default: APL tree
      items:
        type: array
        items:
          $ref: "#/definitions/node"
      edges:
        type: array
        items:
          type: object
          properties:
            source:
              $ref: "#/definitions/UNID"
            target:
              $ref: "#/definitions/UNID"
            relation:
              $ref: "#/definitions/node-relation"
          required:
            - source
            - target
            - relation
            
  
  hierarchy: 
    title: "APL nodes hierarchy"
    description: "An ordered set of waypoints of APL process"
    type: object
    additionalProperties: false
    properties: 
      graph: 
        "$ref": "#/definitions/graph"
    required: 
      - graph
      
  Error:
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type:
           array
        items:
          type: string
    required:
      - code
      - message
      - fields
    additionalProperties: false